 -- consultas usando o not , e o in 
SELECT * FROM tabela_de_produtos WHERE NOT(SABOR ='manga' AND TAMANHO = '470 ml');
SELECT * FROM tabela_de_produtos WHERE NOT(SABOR ='manga' OR TAMANHO = '470 ml');
SELECT * FROM tabela_de_produtos WHERE SABOR ='manga' AND NOT ( TAMANHO = '470 ml');
SELECT * FROM tabela_de_produtos WHERE SABOR IN ('Laranja','Manga');

-- comando LIKE 
SELECT * FROM tabela_de_produtos WHERE SABOR LIKE '%Maça%';
SELECT * FROM tabela_de_produtos WHERE SABOR LIKE '%Maça%' AND EMBALAGEM = 'PET';

-- DISTINCT PROPOCIONAL AO UNIQUE()
SELECT EMBALAGEM, TAMANHO  FROM tabela_de_produtos;
SELECT DISTINCT EMBALAGEM, TAMANHO  FROM tabela_de_produtos;
SELECT DISTINCT EMBALAGEM, TAMANHO  FROM tabela_de_produtos WHERE SABOR='Laranja';

-- LIMIT 
SELECT *  FROM tabela_de_produtos LIMIT 5;
SELECT *  FROM tabela_de_produtos LIMIT 5,10;

-- ORDER  BY  # ASC ( ASCendente )  DESC (DESCrecente) 
SELECT *  FROM tabela_de_produtos ORDER BY PRECO_DE_LISTA;
SELECT *  FROM tabela_de_produtos ORDER BY PRECO_DE_LISTA DESC;
SELECT *  FROM tabela_de_produtos ORDER BY PRECO_DE_LISTA ASC , NOME_DO_PRODUTO DESC;

-- GROUP BY 
SELECT ESTADO , SUM(LIMITE_DE_CREDITO) AS LIMITE_TOTAL FROM tabela_de_clientes GROUP BY ESTADO;
SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS MAIOR_PRECO FROM tabela_de_produtos GROUP BY EMBALAGEM;
SELECT EMBALAGEM, COUNT(*)AS QUANTIDADE_REPETIDA FROM tabela_de_produtos GROUP BY EMBALAGEM;
SELECT BAIRRO, SUM(LIMITE_DE_CREDITO)AS LIMITE FROM tabela_de_clientes WHERE CIDADE = 'Rio de Janeiro' GROUP BY BAIRRO;

SELECT ESTADO , BAIRRO, SUM(LIMITE_DE_CREDITO)AS LIMITE FROM tabela_de_clientes 
WHERE CIDADE = 'Rio de Janeiro' GROUP BY ESTADO ,BAIRRO
ORDER BY BAIRRO;

-- HAVING
SELECT ESTADO , SUM(LIMITE_DE_CREDITO)AS LIMITE FROM tabela_de_clientes 
GROUP BY ESTADO HAVING SUM(LIMITE_DE_CREDITO) > 900000;

SELECT EMBALAGEM,MAX(PRECO_DE_LISTA) AS MAIOR_PRECO, MIN(PRECO_DE_LISTA) AS MENOR_PRECO 
FROM tabela_de_produtos GROUP BY EMBALAGEM HAVING SUM(PRECO_DE_LISTA) <= 80;

SELECT EMBALAGEM,MAX(PRECO_DE_LISTA) AS MAIOR_PRECO, MIN(PRECO_DE_LISTA) AS MENOR_PRECO 
FROM tabela_de_produtos GROUP BY EMBALAGEM HAVING SUM(PRECO_DE_LISTA) <= 80;

SELECT EMBALAGEM,MAX(PRECO_DE_LISTA) AS MAIOR_PRECO, MIN(PRECO_DE_LISTA) AS MENOR_PRECO 
FROM tabela_de_produtos GROUP BY EMBALAGEM HAVING SUM(PRECO_DE_LISTA) <= 80 AND MAX(PRECO_DE_LISTA) >= 5;

